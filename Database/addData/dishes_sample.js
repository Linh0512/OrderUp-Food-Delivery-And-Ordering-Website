use('food_delivery_app');

// ====================================
// CATEGORIES - Danh m·ª•c m√≥n ƒÉn
// ====================================
print("üìù T·∫°o categories...");

const vietnameseCategory = db.categories.insertOne({
  name: "M√≥n Vi·ªát",
  description: "C√°c m√≥n ƒÉn truy·ªÅn th·ªëng Vi·ªát Nam",
  icon: "üáªüá≥",
  isActive: true,
  sortOrder: 1,
  createdAt: new Date(),
  updatedAt: new Date()
});
const vietnameseCategoryId = vietnameseCategory.insertedId;

const pizzaCategory = db.categories.insertOne({
  name: "Pizza",
  description: "Pizza v√† m√≥n √ù",
  icon: "üçï",
  isActive: true,
  sortOrder: 2,
  createdAt: new Date(),
  updatedAt: new Date()
});
const pizzaCategoryId = pizzaCategory.insertedId;

const westernCategory = db.categories.insertOne({
  name: "M√≥n √Çu",
  description: "C√°c m√≥n ƒÉn ph∆∞∆°ng T√¢y",
  icon: "ü•©",
  isActive: true,
  sortOrder: 3,
  createdAt: new Date(),
  updatedAt: new Date()
});
const westernCategoryId = westernCategory.insertedId;

const asianCategory = db.categories.insertOne({
  name: "M√≥n √Å",
  description: "C√°c m√≥n ƒÉn ch√¢u √Å",
  icon: "üçú",
  isActive: true,
  sortOrder: 4,
  createdAt: new Date(),
  updatedAt: new Date()
});
const asianCategoryId = asianCategory.insertedId;

const beverageCategory = db.categories.insertOne({
  name: "ƒê·ªì U·ªëng",
  description: "N∆∞·ªõc u·ªëng v√† th·ª©c u·ªëng",
  icon: "ü•§",
  isActive: true,
  sortOrder: 5,
  createdAt: new Date(),
  updatedAt: new Date()
});
const beverageCategoryId = beverageCategory.insertedId;

const dessertCategory = db.categories.insertOne({
  name: "Tr√°ng Mi·ªáng",
  description: "M√≥n tr√°ng mi·ªáng v√† b√°nh ng·ªçt",
  icon: "üç∞",
  isActive: true,
  sortOrder: 6,
  createdAt: new Date(),
  updatedAt: new Date()
});
const dessertCategoryId = dessertCategory.insertedId;

// ====================================
// DISHES - M√≥n ƒÉn cho t·ª´ng nh√† h√†ng
// ====================================
print("üìù T·∫°o dishes...");

// L·∫•y ID c·ªßa c√°c nh√† h√†ng
const restaurants = db.restaurants.find({}).toArray();
const restaurantMap = {};

restaurants.forEach(restaurant => {
  const name = restaurant.basicInfo.name;
  restaurantMap[name] = restaurant._id;
});

// ====== 1. Ph·ªü B·∫Øc H∆∞∆°ng Qu√™ ======
if (restaurantMap["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantMap["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ T√°i",
        description: "Ph·ªü b√≤ t√°i v·ªõi n∆∞·ªõc d√πng trong v·∫Øt, th∆°m ngon",
        images: ["https://example.com/dishes/pho-bo-tai.jpg"],
        tags: ["bestseller", "traditional"]
      },
      pricing: { basePrice: 45000, isDiscounted: false },
      options: [{
        name: "K√≠ch th∆∞·ªõc",
        type: "single",
        isRequired: true,
        choices: [
          { name: "Nh·ªè", price: 0, isDefault: true },
          { name: "L·ªõn", price: 10000, isDefault: false }
        ]
      }],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.5, totalReviews: 120 },
      stats: { totalOrders: 234, viewCount: 1520 },
      isActive: true,
      isFeatured: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantMap["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ Ch√≠n",
        description: "Ph·ªü b√≤ ch√≠n v·ªõi th·ªãt b√≤ n·∫•u ch√≠n m·ªÅm",
        images: ["https://example.com/dishes/pho-bo-chin.jpg"],
        tags: ["traditional", "comfort"]
      },
      pricing: { basePrice: 50000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.3, totalReviews: 85 },
      stats: { totalOrders: 189, viewCount: 980 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantMap["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü G√†",
        description: "Ph·ªü g√† v·ªõi n∆∞·ªõc d√πng ng·ªçt thanh",
        images: ["https://example.com/dishes/pho-ga.jpg"],
        tags: ["light", "healthy"]
      },
      pricing: { basePrice: 40000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 65 },
      stats: { totalOrders: 134, viewCount: 750 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 2. Steak House ======
if (restaurantMap["Steak House"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantMap["Steak House"],
      categoryId: westernCategoryId,
      basicInfo: {
        name: "Ribeye Steak",
        description: "Ribeye steak cao c·∫•p n∆∞·ªõng ch√≠n v·ª´a v·ªõi khoai t√¢y nghi·ªÅn",
        images: ["https://example.com/dishes/ribeye-steak.jpg"],
        tags: ["premium", "bestseller"]
      },
      pricing: { basePrice: 450000, isDiscounted: false },
      options: [{
        name: "ƒê·ªô ch√≠n",
        type: "single",
        isRequired: true,
        choices: [
          { name: "Rare", price: 0, isDefault: false },
          { name: "Medium Rare", price: 0, isDefault: true },
          { name: "Medium", price: 0, isDefault: false },
          { name: "Well Done", price: 0, isDefault: false }
        ]
      }],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.8, totalReviews: 95 },
      stats: { totalOrders: 145, viewCount: 890 },
      isActive: true,
      isFeatured: true,
      preparationTime: 25,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantMap["Steak House"],
      categoryId: westernCategoryId,
      basicInfo: {
        name: "Beef Tenderloin",
        description: "ThƒÉn ngo·∫°i b√≤ m·ªÅm v·ªõi s·ªët mushroom",
        images: ["https://example.com/dishes/beef-tenderloin.jpg"],
        tags: ["premium", "tender"]
      },
      pricing: { basePrice: 520000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.9, totalReviews: 78 },
      stats: { totalOrders: 98, viewCount: 567 },
      isActive: true,
      preparationTime: 30,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 19. Pizza House Saigon ======
if (restaurantMap["Pizza House Saigon"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantMap["Pizza House Saigon"],
      categoryId: pizzaCategoryId,
      basicInfo: {
        name: "Pizza Margherita",
        description: "Pizza c·ªï ƒëi·ªÉn v·ªõi s·ªët c√† chua, ph√¥ mai mozzarella v√† l√° h√∫ng qu·∫ø t∆∞∆°i",
        images: ["https://example.com/dishes/margherita.jpg"],
        tags: ["vegetarian", "bestseller", "classic"]
      },
      pricing: {
        basePrice: 180000,
        discountPrice: 150000,
        isDiscounted: true
      },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè (20cm)", price: 0, isDefault: true },
            { name: "V·ª´a (25cm)", price: 30000, isDefault: false },
            { name: "L·ªõn (30cm)", price: 60000, isDefault: false }
          ]
        },
        {
          name: "Lo·∫°i ƒë·∫ø",
          type: "single",
          isRequired: false,
          choices: [
            { name: "ƒê·∫ø m·ªèng", price: 0, isDefault: true },
            { name: "ƒê·∫ø d√†y", price: 15000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.7, totalReviews: 89 },
      stats: { totalOrders: 234, viewCount: 1520 },
      isActive: true,
      isFeatured: true,
      preparationTime: 15,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantMap["Pizza House Saigon"],
      categoryId: pizzaCategoryId,
      basicInfo: {
        name: "Pizza Pepperoni",
        description: "Pizza v·ªõi pepperoni, ph√¥ mai mozzarella v√† s·ªët c√† chua ƒë·∫∑c bi·ªát",
        images: ["https://example.com/dishes/pepperoni.jpg"],
        tags: ["popular", "meat"]
      },
      pricing: { basePrice: 220000, isDiscounted: false },
      options: [{
        name: "K√≠ch th∆∞·ªõc",
        type: "single",
        isRequired: true,
        choices: [
          { name: "Nh·ªè (20cm)", price: 0, isDefault: true },
          { name: "V·ª´a (25cm)", price: 30000, isDefault: false },
          { name: "L·ªõn (30cm)", price: 60000, isDefault: false }
        ]
      }],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.5, totalReviews: 76 },
      stats: { totalOrders: 189, viewCount: 987 },
      isActive: true,
      preparationTime: 18,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 20. Ph·ªü S√†i G√≤n ======
if (restaurantMap["Ph·ªü S√†i G√≤n"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantMap["Ph·ªü S√†i G√≤n"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ ƒê·∫∑c Bi·ªát",
        description: "Ph·ªü b√≤ ƒë·∫∑c bi·ªát v·ªõi ƒë·∫ßy ƒë·ªß lo·∫°i th·ªãt",
        images: ["https://example.com/dishes/pho-dac-biet.jpg"],
        tags: ["signature", "complete"]
      },
      pricing: { basePrice: 55000, isDiscounted: false },
      options: [{
        name: "K√≠ch th∆∞·ªõc",
        type: "single",
        isRequired: true,
        choices: [
          { name: "Nh·ªè", price: 0, isDefault: true },
          { name: "L·ªõn", price: 15000, isDefault: false }
        ]
      }],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.4, totalReviews: 78 },
      stats: { totalOrders: 156, viewCount: 789 },
      isActive: true,
      isFeatured: true,
      preparationTime: 12,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantMap["Ph·ªü S√†i G√≤n"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü T√°i N·∫°m",
        description: "Ph·ªü v·ªõi th·ªãt t√°i v√† n·∫°m",
        images: ["https://example.com/dishes/pho-tai-nam.jpg"],
        tags: ["traditional", "popular"]
      },
      pricing: { basePrice: 50000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 65 },
      stats: { totalOrders: 134, viewCount: 567 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

print("‚úÖ ƒê√£ t·∫°o xong categories v√† dishes m·∫´u!");
print("üìä T·ªïng k·∫øt:");
print("- Categories: 6 danh m·ª•c");
print("- Dishes: M√≥n ƒÉn cho 4 nh√† h√†ng m·∫´u");
print("üí° Ch·∫°y file n√†y sau khi ƒë√£ ch·∫°y addSampleData.js"); 