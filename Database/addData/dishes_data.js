use('food_delivery_app');

// ====================================
// CATEGORIES - Danh m·ª•c m√≥n ƒÉn
// ====================================
print("üìù T·∫°o categories...");

const vietnameseCategory = db.categories.insertOne({
  name: "M√≥n Vi·ªát",
  description: "C√°c m√≥n ƒÉn truy·ªÅn th·ªëng Vi·ªát Nam",
  icon: "üáªüá≥",
  isActive: true,
  sortOrder: 1,
  createdAt: new Date(),
  updatedAt: new Date()
});
const vietnameseCategoryId = vietnameseCategory.insertedId;

const pizzaCategory = db.categories.insertOne({
  name: "Pizza",
  description: "Pizza v√† m√≥n √ù",
  icon: "üçï",
  isActive: true,
  sortOrder: 2,
  createdAt: new Date(),
  updatedAt: new Date()
});
const pizzaCategoryId = pizzaCategory.insertedId;

const westernCategory = db.categories.insertOne({
  name: "M√≥n √Çu",
  description: "C√°c m√≥n ƒÉn ph∆∞∆°ng T√¢y",
  icon: "ü•©",
  isActive: true,
  sortOrder: 3,
  createdAt: new Date(),
  updatedAt: new Date()
});
const westernCategoryId = westernCategory.insertedId;

const asianCategory = db.categories.insertOne({
  name: "M√≥n √Å",
  description: "C√°c m√≥n ƒÉn ch√¢u √Å",
  icon: "üçú",
  isActive: true,
  sortOrder: 4,
  createdAt: new Date(),
  updatedAt: new Date()
});
const asianCategoryId = asianCategory.insertedId;

const beverageCategory = db.categories.insertOne({
  name: "ƒê·ªì U·ªëng",
  description: "N∆∞·ªõc u·ªëng v√† th·ª©c u·ªëng",
  icon: "ü•§",
  isActive: true,
  sortOrder: 5,
  createdAt: new Date(),
  updatedAt: new Date()
});
const beverageCategoryId = beverageCategory.insertedId;

const dessertCategory = db.categories.insertOne({
  name: "Tr√°ng Mi·ªáng",
  description: "M√≥n tr√°ng mi·ªáng v√† b√°nh ng·ªçt",
  icon: "üç∞",
  isActive: true,
  sortOrder: 6,
  createdAt: new Date(),
  updatedAt: new Date()
});
const dessertCategoryId = dessertCategory.insertedId;

// ====================================
// DISHES - M√≥n ƒÉn cho t·ª´ng nh√† h√†ng
// ====================================
print("üìù T·∫°o dishes...");

// L·∫•y ID c·ªßa c√°c nh√† h√†ng (gi·∫£ s·ª≠ ƒë√£ ch·∫°y addSampleData.js tr∆∞·ªõc)
const restaurants = db.restaurants.find({}).toArray();
const restaurantIds = {};

restaurants.forEach(restaurant => {
  const name = restaurant.basicInfo.name;
  restaurantIds[name] = restaurant._id;
});

// ====== 1. Ph·ªü B·∫Øc H∆∞∆°ng Qu√™ ======
if (restaurantIds["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ T√°i",
        description: "Ph·ªü b√≤ t√°i v·ªõi n∆∞·ªõc d√πng trong v·∫Øt, th∆°m ngon",
        images: ["https://example.com/dishes/pho-bo-tai.jpg"],
        tags: ["bestseller", "traditional"]
      },
      pricing: {
        basePrice: 45000,
        isDiscounted: false
      },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè", price: 0, isDefault: true },
            { name: "L·ªõn", price: 10000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.5, totalReviews: 120 },
      stats: { totalOrders: 234, viewCount: 1520 },
      isActive: true,
      isFeatured: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ Ch√≠n",
        description: "Ph·ªü b√≤ ch√≠n v·ªõi th·ªãt b√≤ n·∫•u ch√≠n m·ªÅm",
        images: ["https://example.com/dishes/pho-bo-chin.jpg"],
        tags: ["traditional", "comfort"]
      },
      pricing: { basePrice: 50000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.3, totalReviews: 85 },
      stats: { totalOrders: 189, viewCount: 980 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Ph·ªü B·∫Øc H∆∞∆°ng Qu√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü G√†",
        description: "Ph·ªü g√† v·ªõi n∆∞·ªõc d√πng ng·ªçt thanh",
        images: ["https://example.com/dishes/pho-ga.jpg"],
        tags: ["light", "healthy"]
      },
      pricing: { basePrice: 40000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 65 },
      stats: { totalOrders: 134, viewCount: 750 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 2. Steak House ======
if (restaurantIds["Steak House"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Steak House"],
      categoryId: westernCategoryId,
      basicInfo: {
        name: "Ribeye Steak",
        description: "Ribeye steak cao c·∫•p n∆∞·ªõng ch√≠n v·ª´a v·ªõi khoai t√¢y nghi·ªÅn",
        images: ["https://example.com/dishes/ribeye-steak.jpg"],
        tags: ["premium", "bestseller"]
      },
      pricing: { basePrice: 450000, isDiscounted: false },
      options: [
        {
          name: "ƒê·ªô ch√≠n",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Rare", price: 0, isDefault: false },
            { name: "Medium Rare", price: 0, isDefault: true },
            { name: "Medium", price: 0, isDefault: false },
            { name: "Well Done", price: 0, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.8, totalReviews: 95 },
      stats: { totalOrders: 145, viewCount: 890 },
      isActive: true,
      isFeatured: true,
      preparationTime: 25,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Steak House"],
      categoryId: westernCategoryId,
      basicInfo: {
        name: "Beef Tenderloin",
        description: "ThƒÉn ngo·∫°i b√≤ m·ªÅm v·ªõi s·ªët mushroom",
        images: ["https://example.com/dishes/beef-tenderloin.jpg"],
        tags: ["premium", "tender"]
      },
      pricing: { basePrice: 520000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.9, totalReviews: 78 },
      stats: { totalOrders: 98, viewCount: 567 },
      isActive: true,
      preparationTime: 30,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Steak House"],
      categoryId: westernCategoryId,
      basicInfo: {
        name: "Grilled Salmon",
        description: "C√° h·ªìi n∆∞·ªõng v·ªõi s·ªët hollandaise",
        images: ["https://example.com/dishes/grilled-salmon.jpg"],
        tags: ["seafood", "healthy"]
      },
      pricing: { basePrice: 380000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.6, totalReviews: 67 },
      stats: { totalOrders: 89, viewCount: 445 },
      isActive: true,
      preparationTime: 20,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 3. Taco Mexico ======
if (restaurantIds["Taco Mexico"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Taco Mexico"],
      categoryId: asianCategoryId,
      basicInfo: {
        name: "Beef Tacos",
        description: "Taco th·ªãt b√≤ v·ªõi rau s·ªëng v√† s·ªët salsa",
        images: ["https://example.com/dishes/beef-tacos.jpg"],
        tags: ["spicy", "authentic"]
      },
      pricing: { basePrice: 85000, isDiscounted: false },
      options: [
        {
          name: "S·ªë l∆∞·ª£ng",
          type: "single",
          isRequired: true,
          choices: [
            { name: "2 chi·∫øc", price: 0, isDefault: true },
            { name: "3 chi·∫øc", price: 25000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.4, totalReviews: 67 },
      stats: { totalOrders: 156, viewCount: 890 },
      isActive: true,
      isFeatured: true,
      preparationTime: 12,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Taco Mexico"],
      categoryId: asianCategoryId,
      basicInfo: {
        name: "Burrito Bowl",
        description: "Burrito bowl v·ªõi th·ªãt g√†, ƒë·∫≠u ƒëen v√† guacamole",
        images: ["https://example.com/dishes/burrito-bowl.jpg"],
        tags: ["healthy", "filling"]
      },
      pricing: { basePrice: 120000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.3, totalReviews: 45 },
      stats: { totalOrders: 78, viewCount: 456 },
      isActive: true,
      preparationTime: 15,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 4. Caf√© S√°ng ======
if (restaurantIds["Caf√© S√°ng"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Caf√© S√°ng"],
      categoryId: beverageCategoryId,
      basicInfo: {
        name: "Cappuccino",
        description: "Cappuccino th∆°m v·ªõi b·ªçt s·ªØa m·ªãn",
        images: ["https://example.com/dishes/cappuccino.jpg"],
        tags: ["classic", "coffee"]
      },
      pricing: { basePrice: 35000, isDiscounted: false },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè", price: 0, isDefault: true },
            { name: "L·ªõn", price: 10000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.6, totalReviews: 89 },
      stats: { totalOrders: 267, viewCount: 1234 },
      isActive: true,
      isFeatured: true,
      preparationTime: 5,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Caf√© S√°ng"],
      categoryId: dessertCategoryId,
      basicInfo: {
        name: "Tiramisu",
        description: "B√°nh Tiramisu Italy ch√≠nh g·ªëc",
        images: ["https://example.com/dishes/tiramisu.jpg"],
        tags: ["dessert", "sweet"]
      },
      pricing: { basePrice: 65000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.7, totalReviews: 56 },
      stats: { totalOrders: 89, viewCount: 345 },
      isActive: true,
      preparationTime: 3,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Caf√© S√°ng"],
      categoryId: beverageCategoryId,
      basicInfo: {
        name: "Latte",
        description: "Latte m·ªÅm m·∫°i v·ªõi latte art ƒë·∫πp m·∫Øt",
        images: ["https://example.com/dishes/latte.jpg"],
        tags: ["smooth", "popular"]
      },
      pricing: { basePrice: 38000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.5, totalReviews: 72 },
      stats: { totalOrders: 198, viewCount: 876 },
      isActive: true,
      preparationTime: 6,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 5. L·∫©u D√™ ======
if (restaurantIds["L·∫©u D√™"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["L·∫©u D√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "L·∫©u D√™ L√° Giang",
        description: "L·∫©u d√™ v·ªõi l√° giang th∆°m, n∆∞·ªõc d√πng ƒë·∫≠m ƒë√†",
        images: ["https://example.com/dishes/lau-de-la-giang.jpg"],
        tags: ["traditional", "hot"]
      },
      pricing: { basePrice: 280000, isDiscounted: false },
      options: [
        {
          name: "Ph·∫ßn ƒÉn",
          type: "single",
          isRequired: true,
          choices: [
            { name: "2-3 ng∆∞·ªùi", price: 0, isDefault: true },
            { name: "4-5 ng∆∞·ªùi", price: 120000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.3, totalReviews: 73 },
      stats: { totalOrders: 89, viewCount: 567 },
      isActive: true,
      isFeatured: true,
      preparationTime: 20,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["L·∫©u D√™"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Th·ªãt D√™ N∆∞·ªõng",
        description: "Th·ªãt d√™ n∆∞·ªõng t·ªèi ·ªõt th∆°m ngon",
        images: ["https://example.com/dishes/thit-de-nuong.jpg"],
        tags: ["grilled", "spicy"]
      },
      pricing: { basePrice: 150000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 45 },
      stats: { totalOrders: 67, viewCount: 234 },
      isActive: true,
      preparationTime: 18,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 6. Sushi Bar ======
if (restaurantIds["Sushi Bar"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Sushi Bar"],
      categoryId: asianCategoryId,
      basicInfo: {
        name: "Sashimi Set",
        description: "Set sashimi c√° h·ªìi v√† c√° ng·ª´ t∆∞∆°i",
        images: ["https://example.com/dishes/sashimi-set.jpg"],
        tags: ["fresh", "premium"]
      },
      pricing: { basePrice: 180000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.7, totalReviews: 92 },
      stats: { totalOrders: 123, viewCount: 678 },
      isActive: true,
      isFeatured: true,
      preparationTime: 8,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Sushi Bar"],
      categoryId: asianCategoryId,
      basicInfo: {
        name: "California Roll",
        description: "California roll v·ªõi cua v√† b∆°",
        images: ["https://example.com/dishes/california-roll.jpg"],
        tags: ["popular", "mild"]
      },
      pricing: { basePrice: 120000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.4, totalReviews: 67 },
      stats: { totalOrders: 156, viewCount: 789 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Sushi Bar"],
      categoryId: asianCategoryId,
      basicInfo: {
        name: "Dragon Roll",
        description: "Dragon roll v·ªõi l∆∞∆°n n∆∞·ªõng v√† b∆°",
        images: ["https://example.com/dishes/dragon-roll.jpg"],
        tags: ["signature", "premium"]
      },
      pricing: { basePrice: 160000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.6, totalReviews: 54 },
      stats: { totalOrders: 89, viewCount: 456 },
      isActive: true,
      preparationTime: 12,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 7. B√°nh Tr√°ng N∆∞·ªõng ======
if (restaurantIds["B√°nh Tr√°ng N∆∞·ªõng"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["B√°nh Tr√°ng N∆∞·ªõng"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "B√°nh Tr√°ng N∆∞·ªõng ƒê·∫∑c Bi·ªát",
        description: "B√°nh tr√°ng n∆∞·ªõng v·ªõi tr·ª©ng, pate, t√¥m kh√¥ v√† ƒë·∫ßy ƒë·ªß topping",
        images: ["https://example.com/dishes/banh-trang-nuong-dac-biet.jpg"],
        tags: ["street_food", "complete"]
      },
      pricing: { basePrice: 25000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.3, totalReviews: 89 },
      stats: { totalOrders: 234, viewCount: 987 },
      isActive: true,
      isFeatured: true,
      preparationTime: 8,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["B√°nh Tr√°ng N∆∞·ªõng"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "B√°nh Tr√°ng N∆∞·ªõng T√¥m",
        description: "B√°nh tr√°ng n∆∞·ªõng v·ªõi t√¥m t∆∞∆°i",
        images: ["https://example.com/dishes/banh-trang-nuong-tom.jpg"],
        tags: ["seafood", "crispy"]
      },
      pricing: { basePrice: 30000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 67 },
      stats: { totalOrders: 156, viewCount: 567 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 19. Pizza House Saigon ======
if (restaurantIds["Pizza House Saigon"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Pizza House Saigon"],
      categoryId: pizzaCategoryId,
      basicInfo: {
        name: "Pizza Margherita",
        description: "Pizza c·ªï ƒëi·ªÉn v·ªõi s·ªët c√† chua, ph√¥ mai mozzarella v√† l√° h√∫ng qu·∫ø t∆∞∆°i",
        images: ["https://example.com/dishes/margherita.jpg"],
        tags: ["vegetarian", "bestseller", "classic"]
      },
      pricing: {
        basePrice: 180000,
        discountPrice: 150000,
        isDiscounted: true
      },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè (20cm)", price: 0, isDefault: true },
            { name: "V·ª´a (25cm)", price: 30000, isDefault: false },
            { name: "L·ªõn (30cm)", price: 60000, isDefault: false }
          ]
        },
        {
          name: "Lo·∫°i ƒë·∫ø",
          type: "single",
          isRequired: false,
          choices: [
            { name: "ƒê·∫ø m·ªèng", price: 0, isDefault: true },
            { name: "ƒê·∫ø d√†y", price: 15000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.7, totalReviews: 89 },
      stats: { totalOrders: 234, viewCount: 1520 },
      isActive: true,
      isFeatured: true,
      preparationTime: 15,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Pizza House Saigon"],
      categoryId: pizzaCategoryId,
      basicInfo: {
        name: "Pizza Pepperoni",
        description: "Pizza v·ªõi pepperoni, ph√¥ mai mozzarella v√† s·ªët c√† chua ƒë·∫∑c bi·ªát",
        images: ["https://example.com/dishes/pepperoni.jpg"],
        tags: ["popular", "meat"]
      },
      pricing: { basePrice: 220000, isDiscounted: false },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè (20cm)", price: 0, isDefault: true },
            { name: "V·ª´a (25cm)", price: 30000, isDefault: false },
            { name: "L·ªõn (30cm)", price: 60000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.5, totalReviews: 76 },
      stats: { totalOrders: 189, viewCount: 987 },
      isActive: true,
      preparationTime: 18,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Pizza House Saigon"],
      categoryId: pizzaCategoryId,
      basicInfo: {
        name: "Pizza Quattro Stagioni",
        description: "Pizza 4 m√πa v·ªõi jambon, n·∫•m, √¥ liu v√† atiso",
        images: ["https://example.com/dishes/quattro-stagioni.jpg"],
        tags: ["variety", "premium"]
      },
      pricing: { basePrice: 250000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.6, totalReviews: 54 },
      stats: { totalOrders: 123, viewCount: 654 },
      isActive: true,
      preparationTime: 20,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

// ====== 20. Ph·ªü S√†i G√≤n ======
if (restaurantIds["Ph·ªü S√†i G√≤n"]) {
  db.dishes.insertMany([
    {
      restaurantId: restaurantIds["Ph·ªü S√†i G√≤n"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü B√≤ ƒê·∫∑c Bi·ªát",
        description: "Ph·ªü b√≤ ƒë·∫∑c bi·ªát v·ªõi ƒë·∫ßy ƒë·ªß lo·∫°i th·ªãt",
        images: ["https://example.com/dishes/pho-dac-biet.jpg"],
        tags: ["signature", "complete"]
      },
      pricing: { basePrice: 55000, isDiscounted: false },
      options: [
        {
          name: "K√≠ch th∆∞·ªõc",
          type: "single",
          isRequired: true,
          choices: [
            { name: "Nh·ªè", price: 0, isDefault: true },
            { name: "L·ªõn", price: 15000, isDefault: false }
          ]
        }
      ],
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.4, totalReviews: 78 },
      stats: { totalOrders: 156, viewCount: 789 },
      isActive: true,
      isFeatured: true,
      preparationTime: 12,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Ph·ªü S√†i G√≤n"],
      categoryId: vietnameseCategoryId,
      basicInfo: {
        name: "Ph·ªü T√°i N·∫°m",
        description: "Ph·ªü v·ªõi th·ªãt t√°i v√† n·∫°m",
        images: ["https://example.com/dishes/pho-tai-nam.jpg"],
        tags: ["traditional", "popular"]
      },
      pricing: { basePrice: 50000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.2, totalReviews: 65 },
      stats: { totalOrders: 134, viewCount: 567 },
      isActive: true,
      preparationTime: 10,
      createdAt: new Date(),
      updatedAt: new Date()
    },
    {
      restaurantId: restaurantIds["Ph·ªü S√†i G√≤n"],
      categoryId: beverageCategoryId,
      basicInfo: {
        name: "Tr√† ƒê√°",
        description: "Tr√† ƒë√° truy·ªÅn th·ªëng gi·∫£i kh√°t",
        images: ["https://example.com/dishes/tra-da.jpg"],
        tags: ["refreshing", "traditional"]
      },
      pricing: { basePrice: 8000, isDiscounted: false },
      availability: { isAvailable: true, soldOut: false },
      ratings: { averageRating: 4.0, totalReviews: 34 },
      stats: { totalOrders: 89, viewCount: 234 },
      isActive: true,
      preparationTime: 2,
      createdAt: new Date(),
      updatedAt: new Date()
    }
  ]);
}

print("‚úÖ ƒê√£ t·∫°o xong categories v√† dishes!");
print("üìä T·ªïng k·∫øt:");
print("- Categories: 6 danh m·ª•c");
print("- Dishes: 30+ m√≥n ƒÉn cho 7 nh√† h√†ng ƒë·∫ßu ti√™n");
print("üí° Ch·∫°y file n√†y sau khi ƒë√£ ch·∫°y addSampleData.js"); 